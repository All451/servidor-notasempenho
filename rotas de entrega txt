const { DataTypes } = require('sequelize');
const sequelize = require('../config/database');

const Usuario = sequelize.define('Usuario', {
    nome: {
        type: DataTypes.STRING,
        allowNull: false
    },
    email: {
        type: DataTypes.STRING,
        allowNull: false,
        unique: true
    },
    senha: {
        type: DataTypes.STRING,
        allowNull: false
    }
}, {
    timestamps: true
});

module.exports = Usuario; 


const Entrega = require('../models/entrega.model');

// Cadastrar uma nova entrega
exports.cadastrarEntrega = async (req, res) => {
    try {
        const entrega = await Entrega.create(req.body);
        res.status(201).json({ message: 'Entrega cadastrada com sucesso!', entrega });
    } catch (error) {
        res.status(400).json({ error: error.message });
    }
};

// Buscar todas as entregas
exports.buscarEntregas = async (req, res) => {
    try {
        const entregas = await Entrega.findAll();
        res.status(200).json(entregas);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};

// Buscar uma entrega por ID
exports.buscarEntregaPorId = async (req, res) => {
    const { id } = req.params;
    try {
        const entrega = await Entrega.findByPk(id);
        if (!entrega) {
            return res.status(404).json({ message: 'Entrega não encontrada.' });
        }
        res.status(200).json(entrega);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};

// Atualizar uma entrega existente
exports.atualizarEntrega = async (req, res) => {
    const { id } = req.params;
    try {
        const [updated] = await Entrega.update(req.body, {
            where: { id }
        });
        if (!updated) {
            return res.status(404).json({ message: 'Entrega não encontrada.' });
        }
        res.status(200).json({ message: 'Entrega atualizada com sucesso!' });
    } catch (error) {
        res.status(400).json({ error: error.message });
    }
};

// Deletar uma entrega
exports.deletarEntrega = async (req, res) => {
    const { id } = req.params;
    try {
        const deleted = await Entrega.destroy({
            where: { id }
        });
        if (!deleted) {
            return res.status(404).json({ message: 'Entrega não encontrada.' });
        }
        res.status(200).json({ message: 'Entrega deletada com sucesso!' });
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};

const express = require('express');
const { 
    cadastrarEntrega, 
    buscarEntregas, 
    buscarEntregaPorId, 
    atualizarEntrega, 
    deletarEntrega 
} = require('../controllers/entregaController');

const router = express.Router();

// Rota para cadastrar uma nova entrega
router.post('/entregas', cadastrarEntrega);

// Rota para buscar todas as entregas
router.get('/entregas', buscarEntregas);

// Rota para buscar uma entrega específica por ID
router.get('/entregas/:id', buscarEntregaPorId);

// Rota para atualizar uma entrega existente
router.put('/entregas/:id', atualizarEntrega);

// Rota para deletar uma entrega
router.delete('/entregas/:id', deletarEntrega);

module.exports = router;